# Docker compose from bringing up a local ksqlDB cluster and dependencies.
#
# By default, the cluster has two ksqlDB servers. You can scale the number of ksqlDB nodes in the
# cluster by using the docker `--scale` command line arg.
#
# e.g. for a 4 node cluster run:
# > docker-compose up --scale additional-ksqldb-server:
#
# or a 1 node cluster run:
# > docker-compose up --scale additional-ksqldb-server:
#
# The default is one `primary-ksqldb-server` and one `additional-ksqdb-server`. The only
# difference is that the primary node has a well-known port exposed so clients can connect, where
# as the additional nodes use auto-port assignment so that ports don't clash.
#
# If you wish to run with locally built ksqlDB docker images then:
#
# 1. Follow the steps in https://github.com/confluentinc/ksql/blob/master/ksqldb-docker/README.md
# to build a ksqlDB docker image with local changes.
#
# 2. Update .env file to use your local images by setting KSQL_IMAGE_BASE: placeholder/ and KSQL_VERSION: local.buil

---
version: '2'
services:
  schema-registry:
    container_name: sr
    ports:
      - "28081:8081"
    image:  confluentinc/cp-schema-registry:latest  
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: $JAAS
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: pkc-lgwgm.eastus2.azure.confluent.cloud:9092
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas_ext1_
      SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID: ptr_vdev_schema_registry_1_
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: ptr_vdev_schema_registry_1_
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
